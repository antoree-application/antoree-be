# ==============================================================================
# NestJS Realtime Server - Environment Configuration
# ==============================================================================

# Copy this file to .env and update the values

# ==============================================================================
# Application Configuration
# ==============================================================================

NODE_ENV=development
PORT=8080
DEBUG_PORT=9229

# ==============================================================================
# Database Configuration (PostgreSQL)
# ==============================================================================

POSTGRES_USER=admin
POSTGRES_PASSWORD=your_secure_postgres_password
POSTGRES_DB=nestjs_chat_db
POSTGRES_PORT=5432

# Constructed DATABASE_URL (update password)
DATABASE_URL=postgres://admin:your_secure_postgres_password@postgres:5432/nestjs_chat_db

# ==============================================================================
# Cache Configuration (Redis)
# ==============================================================================

REDIS_HOST=redis
REDIS_PORT=6379
REDIS_PASSWORD=your_secure_redis_password
REDIS_URL=redis://:your_secure_redis_password@redis:6379

# ==============================================================================
# Message Queue Configuration (RabbitMQ)
# ==============================================================================

RABBITMQ_USER=admin
RABBITMQ_PASSWORD=your_secure_rabbitmq_password
RABBITMQ_PORT=5672
RABBITMQ_MANAGEMENT_PORT=15672
RABBITMQ_URL=amqp://admin:your_secure_rabbitmq_password@rabbitmq:5672

# ==============================================================================
# Authentication & Security
# ==============================================================================

# JWT Configuration (use strong secrets in production)
JWT_ACCESS_TOKEN=your_super_secure_jwt_secret_key_minimum_32_characters
JWT_ACCESS_EXPIRED=7d
JWT_REFRESH_TOKEN=your_super_secure_jwt_refresh_secret_minimum_32_characters
JWT_REFRESH_EXPIRED=30d

# Session Secret
SESSION_SECRET=your_super_secure_session_secret_minimum_32_characters

# ==============================================================================
# CORS Configuration
# ==============================================================================

# Allowed origins (comma-separated)
CORS_ORIGINS=http://localhost:3000,http://localhost:3001

# ==============================================================================
# File Upload Configuration
# ==============================================================================

MAX_FILE_SIZE=10485760
UPLOAD_PATH=/app/uploads
ALLOWED_FILE_TYPES=jpg,jpeg,png,gif,pdf,doc,docx

# ==============================================================================
# Email Configuration
# ==============================================================================

# SMTP Configuration (Production)
SMTP_HOST=smtp.gmail.com
SMTP_PORT=587
SMTP_USER=your_email@gmail.com
SMTP_PASS=your_email_password
SMTP_FROM=noreply@yourapp.com

# Mailhog (Development - leave these for dev environment)
MAILHOG_SMTP_PORT=1025
MAILHOG_UI_PORT=8025

# ==============================================================================
# External Services
# ==============================================================================

# Firebase (Optional - for push notifications)
FIREBASE_PROJECT_ID=your_firebase_project_id
FIREBASE_PRIVATE_KEY_ID=your_firebase_private_key_id
FIREBASE_PRIVATE_KEY=your_firebase_private_key
FIREBASE_CLIENT_EMAIL=your_firebase_client_email
FIREBASE_CLIENT_ID=your_firebase_client_id

# ==============================================================================
# Development Tools Configuration
# ==============================================================================

# PgAdmin
PGADMIN_EMAIL=admin@nestjs.dev
PGADMIN_PASSWORD=your_pgadmin_password
PGADMIN_PORT=5050

# Redis Commander
REDIS_COMMANDER_USER=admin
REDIS_COMMANDER_PASSWORD=your_redis_commander_password
REDIS_COMMANDER_PORT=8087

# ==============================================================================
# Logging Configuration
# ==============================================================================

LOG_LEVEL=info
LOG_FORMAT=json

# ==============================================================================
# Rate Limiting
# ==============================================================================

RATE_LIMIT_WINDOW=15min
RATE_LIMIT_MAX_REQUESTS=100

# ==============================================================================
# WebSocket Configuration
# ==============================================================================

WEBSOCKET_CORS_ORIGINS=http://localhost:3000,http://localhost:3001
WEBSOCKET_PING_TIMEOUT=60000
WEBSOCKET_PING_INTERVAL=25000

# ==============================================================================
# Performance Settings
# ==============================================================================

# Database Connection Pool
DB_POOL_MIN=2
DB_POOL_MAX=10

# Redis Connection Pool
REDIS_POOL_MIN=2
REDIS_POOL_MAX=10

# ==============================================================================
# Production Security Settings
# ==============================================================================

# Set these to true in production
ENABLE_HELMET=true
ENABLE_CORS=true
ENABLE_COMPRESSION=true

# API Documentation
ENABLE_SWAGGER=true
SWAGGER_PATH=api-docs

# ==============================================================================
# Development Settings
# ==============================================================================

# Development mode features
ENABLE_DEBUG_LOGS=true
ENABLE_HOT_RELOAD=true

# ==============================================================================
# Production Deployment Notes
# ==============================================================================

# For production deployment, ensure you:
# 1. Generate strong random passwords for all services
# 2. Use secure JWT secrets (minimum 32 characters)
# 3. Set appropriate CORS origins
# 4. Configure proper SMTP settings
# 5. Set NODE_ENV=production
# 6. Disable debug features
# 7. Use proper SSL certificates 
